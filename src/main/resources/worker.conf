workerA.akka {
  actor {
    provider = "cluster"
    deployment {
      /workerRegion/workProcessorRouter {
        router = round-robin-pool
        nr-of-instances = 200
        // Cluster aware routers
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 3
          allow-local-routees = on
          use-roles = ["worker"]
        }
      }
    }
  }

  remote {
    netty.tcp {
      bind-hostname = "0.0.0.0"
      bind-hostname = ${?BIND_HOST}  # internal (bind) hostname
      bind-port = ${?BIND_PORT} # internal (bind) port

      hostname = ${workerA.akka.clustering.ip}
      port = ${workerA.akka.clustering.port}
    }
  }

  cluster {
    min-nr-of-members = 1
    seed-nodes = [
      "akka.tcp://"${workerA.akka.clustering.cluster.name}"@"${workerA.akka.clustering.seed1.ip}":"${workerA.akka.clustering.seed1.port}
    ]
    roles = [${workerA.akka.clustering.role}]
  }
  cluster.client {
    initial-contacts = [
      "akka.tcp://"${workerA.akka.cluster.master.name}"@"${workerA.akka.cluster.master.ip}":"${workerA.akka.cluster.master.port}"/system/receptionist"
    ]
  }

  extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]
  cluster.metrics.collector.sample-interval = 20s
  clustering {
    cluster.name = "WorkerSystemA"
    cluster.name = ${?WORKER_CLUSTER_NAME}
    cluster.name = ${?WORKER_CLUSTER_NAME_A}
    role = "worker"
    role = ${?ROLE}
    ip = "0.0.0.0"
    ip = ${?CLUSTER_IP}
    port = 0
    port = ${?CLUSTER_PORT_A}
    seed1.ip = "127.0.0.1"
    seed1.ip = ${?CLUSTER_IP}
    seed1.ip = ${?SEED1_IP_A}
    seed1.port = ${SEED1_PORT_A}
  }

  # Cluster client settings
  cluster.master.name = ${?MASTER_SYSTEM_NAME_A}
  cluster.master.ip = ${?MASTER_IP_A}
  cluster.master.port = ${?MASTER_PORT_A}
}

workerB.akka {
  actor {
    provider = "cluster"
    deployment {
      /workerRegion/workProcessorRouter {
        router = round-robin-pool
        nr-of-instances = 200
        // Cluster aware routers
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 7
          allow-local-routees = on
          use-roles = ["worker"]
        }
      }
    }
  }

  remote {
    netty.tcp {
      bind-hostname = "0.0.0.0"
      bind-hostname = ${?BIND_HOST}  # internal (bind) hostname
      bind-port = ${?BIND_PORT} # internal (bind) port

      hostname = ${workerB.akka.clustering.ip}
      port = ${workerB.akka.clustering.port}
    }
  }

  cluster {
    min-nr-of-members = 1
    seed-nodes = [
      "akka.tcp://"${workerB.akka.clustering.cluster.name}"@"${workerB.akka.clustering.seed1.ip}":"${workerB.akka.clustering.seed1.port}
    ]
    roles = [${workerB.akka.clustering.role}]
  }
  cluster.client {
    initial-contacts = [
      "akka.tcp://"${workerB.akka.cluster.master.name}"@"${workerB.akka.cluster.master.ip}":"${workerB.akka.cluster.master.port}"/system/receptionist"
    ]
  }

  extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]
  cluster.metrics.collector.sample-interval = 20s

  clustering {
    cluster.name = "WorkerSystemB"
    cluster.name = ${?WORKER_CLUSTER_NAME}
    cluster.name = ${?WORKER_CLUSTER_NAME_B}
    role = "worker"
    role = ${?ROLE}
    ip = ""
    ip = ${?CLUSTER_IP}
    port = 0
    port = ${?CLUSTER_PORT_B}
    seed1.ip = "127.0.0.1"
    seed1.ip = ${?CLUSTER_IP}
    seed1.ip = ${?SEED1_IP_B}
    seed1.port = ""
    seed1.port = ${?SEED1_PORT_B}
  }

  # Cluster client settings
  cluster.master.name = ""
  cluster.master.name = ${?MASTER_SYSTEM_NAME_B}
  cluster.master.ip = ""
  cluster.master.ip = ${?MASTER_IP_B}
  cluster.master.port = ""
  cluster.master.port = ${?MASTER_PORT_B}
}


